---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

name: nox
'on':
  push:
    branches:
      - main
      - stable-*
  pull_request:
  # Run CI once per day (at 04:30 UTC)
  schedule:
    - cron: '30 4 * * *'
  workflow_dispatch:

jobs:
  nox:
    runs-on: ubuntu-latest
    name: "Run extra sanity tests"
    steps:
      - name: Check out collection
        uses: actions/checkout@v4
        with:
          path: ansible_collections/community/dns
          persist-credentials: false
      - name: Run nox
        uses: felixfontein/antsibull-nox@install-source
        with:
          working-directory: ansible_collections/community/dns

  create-matrixes:
    runs-on: ubuntu-latest
    name: "Create matrixes"
    outputs:
      sanity-matrix: ${{ fromJSON(steps.generate-matrix.outputs.run-nox).sanity }}
      units-matrix: ${{ fromJSON(steps.generate-matrix.outputs.run-nox).units }}
      integration-matrix: ${{ fromJSON(steps.generate-matrix.outputs.run-nox).integration }}
    steps:
      - name: Check out collection
        uses: actions/checkout@v4
        with:
          path: ansible_collections/community/dns
          persist-credentials: false
      - name: Run nox
        uses: felixfontein/antsibull-nox@install-source
        id: generate-matrix
        with:
          working-directory: ansible_collections/community/dns
          sessions: matrix-generator

  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible-core }})
    needs:
      - create-matrixes
    strategy:
      matrix:
        include: ${{ fromJson(needs.create-matrixes.outputs.sanity-matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out collection
        uses: actions/checkout@v4
        with:
          path: ansible_collections/community/dns
          persist-credentials: false
      - name: Run nox
        uses: felixfontein/antsibull-nox@install-source
        with:
          working-directory: ansible_collections/community/dns
          extra-python-versions: ${{ matrix.python }}
          extra-args: --coverage
          sessions: ${{ matrix.name }}
      - name: Upload coverage for final step
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-sanity-${{ matrix.name }}
          path: ansible_collections/community/dns/tests/output/reports/coverage=sanity=*.xml

  units:
    name: Units (Ⓐ${{ matrix.ansible-core }})
    needs:
      - create-matrixes
    strategy:
      matrix:
        include: ${{ fromJson(needs.create-matrixes.outputs.units-matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out collection
        uses: actions/checkout@v4
        with:
          path: ansible_collections/community/dns
          persist-credentials: false
      - name: Run nox
        uses: felixfontein/antsibull-nox@install-source
        with:
          working-directory: ansible_collections/community/dns
          extra-python-versions: ${{ matrix.python }}
          extra-args: --coverage
          sessions: ${{ matrix.name }}
      - name: Upload coverage for final step
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-units-${{ matrix.name }}
          path: ansible_collections/community/dns/tests/output/reports/coverage=units=*.xml

  integration:
    name: I (Ⓐ${{ matrix.ansible-core }}+py${{ matrix.test-python }}+${{ matrix.test-container }})
    needs:
      - create-matrixes
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.create-matrixes.outputs.integration-matrix) }}

    runs-on: ubuntu-latest
    steps:
      - name: Check out collection
        uses: actions/checkout@v4
        with:
          path: ansible_collections/community/dns
          persist-credentials: false
      - name: Run nox
        uses: felixfontein/antsibull-nox@install-source
        with:
          working-directory: ansible_collections/community/dns
          extra-python-versions: ${{ matrix.python }}
          extra-args: --coverage
          sessions: ${{ matrix.name }}
      - name: Upload coverage for final step
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-integration-${{ matrix.name }}
          path: ansible_collections/community/dns/tests/output/reports/coverage=integration=*.xml

  upload-coverage:
    runs-on: ubuntu-latest
    needs:
      - sanity
      - units
      - integration
    steps:
      - name: Check out collection
        uses: actions/checkout@v4
        with:
          path: ansible_collections/community/dns
          persist-credentials: false
      - name: Download coverage from previous steps
        uses: actions/download-artifact@v4
        with:
          path: ansible_collections/community/dns/
          pattern: code-coverage-*
      - name: List all files
        run: find ansible_collections/community/dns/ -name 'coverage=*.xml'
        shell: bash
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          files: ansible_collections/community/dns/coverage=*.xml
          token: ${{ secrets.CODECOV_TOKEN }}
