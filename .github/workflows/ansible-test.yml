---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

# For the comprehensive list of the inputs supported by the ansible-community/ansible-test-gh-action GitHub Action, see
# https://github.com/marketplace/actions/ansible-test

name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches:
      - main
      - stable-*
  pull_request:
  # Run CI once per day (at 04:30 UTC)
  schedule:
    - cron: '30 4 * * *'
env:
  NAMESPACE: community
  COLLECTION_NAME: dns

jobs:
  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
          - stable-2.14
          - stable-2.15
          - stable-2.16
          - stable-2.17
          - devel
    runs-on: ubuntu-latest
    steps:
      - name: Perform sanity testing
        uses: felixfontein/ansible-test-gh-action@main
        with:
          ansible-core-version: ${{ matrix.ansible }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          testing-type: sanity
          test-deps: >-
            git+https://github.com/ansible-collections/community.library_inventory_filtering.git,stable-1

  units:
    runs-on: ubuntu-latest
    name: Units (Ⓐ${{ matrix.ansible }})
    strategy:
      # As soon as the first unit test fails, cancel the others to free up the CI queue
      fail-fast: true
      matrix:
        ansible:
          - stable-2.14
          - stable-2.15
          - stable-2.16
          - stable-2.17
          - devel

    steps:
      - name: >-
          Perform unit testing against
          Ansible version ${{ matrix.ansible }}
        uses: felixfontein/ansible-test-gh-action@main
        with:
          ansible-core-version: ${{ matrix.ansible }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          testing-type: units
          pre-test-cmd: >-
            tests/unit/replace-requirements.sh requirements-${{ matrix.ansible }}.txt
          test-deps: >-
            git+https://github.com/ansible-collections/community.internal_test_tools.git,main
            git+https://github.com/ansible-collections/community.library_inventory_filtering.git,stable-1

  integration:
    # Ansible-test on various stable branches does not yet work well with cgroups v2.
    # Since ubuntu-latest now uses Ubuntu 22.04, we need to fall back to the ubuntu-20.04
    # image for these stable branches. The list of branches where this is necessary will
    # shrink over time, check out https://github.com/ansible-collections/news-for-maintainers/issues/28
    # for the latest list.
    runs-on: >-
      ${{ contains(fromJson(
          '["stable-2.9", "stable-2.10", "stable-2.11"]'
      ), matrix.ansible) && 'ubuntu-20.04' || 'ubuntu-latest' }}
    name: I (Ⓐ${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - devel
        python:
          - 3.8
          - 3.9
          - "3.10"
          - "3.11"
          - "3.12"
        include:
          # 2.14
          - ansible: stable-2.14
            python: "2.7"
          - ansible: stable-2.14
            python: "3.5"
          - ansible: stable-2.14
            python: "3.9"
          # 2.15
          - ansible: stable-2.15
            python: "3.7"
          # 2.16
          - ansible: stable-2.16
            python: "2.7"
          - ansible: stable-2.16
            python: "3.6"
          - ansible: stable-2.16
            python: "3.11"
          # 2.17
          - ansible: stable-2.17
            python: "3.7"
          - ansible: stable-2.17
            python: "3.12"

    steps:
      - name: >-
          Perform integration testing against
          Ansible version ${{ matrix.ansible }}
          under Python ${{ matrix.python }}
        uses: felixfontein/ansible-test-gh-action@main
        with:
          ansible-core-version: ${{ matrix.ansible }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          integration-continue-on-error: 'false'
          integration-diff: 'false'
          integration-retry-on-error: 'true'
          pre-test-cmd: >-
            tests/integration/replace-requirements.sh requirements-${{ matrix.ansible }}.txt
          test-deps: >-
            git+https://github.com/ansible-collections/community.library_inventory_filtering.git,stable-1
          target-python-version: ${{ matrix.python }}
          testing-type: integration
