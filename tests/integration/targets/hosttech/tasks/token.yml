---
- name: (token) Get zone info
  hosttech_dns_zone_info:
    zone_name: '{{ test_zone }}'
    hosttech_token: '{{ hosttech_token }}'
  register: result_zone

- name: (token) Get zone info by ID
  hosttech_dns_zone_info:
    zone_id: '{{ result_zone.zone_id }}'
    hosttech_token: '{{ hosttech_token }}'
  register: result_zone_id

- name: (token) Get all NS records
  hosttech_dns_record_set_info:
    zone_name: '{{ test_zone }}'
    record: '{{ test_zone }}'
    type: NS
    hosttech_token: '{{ hosttech_token }}'
  register: result

- name: (token) Output all records
  debug:
    var: result

- assert:
    that:
      - result_zone == result_zone_id
      - result_zone.zone_name == test_zone
      - result_zone.zone_id == result.zone_id
      - result.set

- name: (token) Set zone ID
  set_fact:
    hosttech_zone_id: "{{ result.zone_id }}"

- name: (token) Ensure that test record is not present
  hosttech_dns_record_set:
    state: present
    zone_name: '{{ test_zone }}'
    record: '{{ test_record }}'
    type: A
    ttl: 600
    value: []
    hosttech_token: '{{ hosttech_token }}'

- block:

  - name: (token) Get test record
    hosttech_dns_record_set_info:
      zone_id: '{{ hosttech_zone_id }}'
      record: '{{ test_record }}'
      type: A
      hosttech_token: '{{ hosttech_token }}'
    register: rec

  - assert:
      that:
        - not rec.set

  - name: (token) Create test record
    hosttech_dns_record_set:
      state: present
      zone_name: '{{ test_zone }}'
      record: '{{ test_record }}'
      type: A
      ttl: 600
      value:
        - 1.2.3.4
        - 1.2.3.5
        - 1.2.3.6
      hosttech_token: '{{ hosttech_token }}'

  - name: (token) Modify test record
    hosttech_dns_record_set:
      state: present
      zone_name: '{{ test_zone }}'
      prefix: '{{ test_record_prefix }}'
      type: A
      ttl: 600
      value:
        - 1.2.3.4
        - 1.2.3.7
      hosttech_token: '{{ hosttech_token }}'

  - name: (token) Add test record
    hosttech_dns_record:
      state: present
      zone_name: '{{ test_zone }}'
      prefix: '{{ test_record_prefix }}'
      type: A
      ttl: 600
      value: 1.2.3.8
      hosttech_token: '{{ hosttech_token }}'

  - name: (token) Remove test record
    hosttech_dns_record:
      state: absent
      zone_name: '{{ test_zone }}'
      prefix: '{{ test_record_prefix }}'
      type: A
      ttl: 600
      value: 1.2.3.4
      hosttech_token: '{{ hosttech_token }}'

  - name: (token) Get test record
    hosttech_dns_record_set_info:
      zone_name: '{{ test_zone }}'
      record: '{{ test_record }}'
      type: A
      hosttech_token: '{{ hosttech_token }}'
    register: rec

  - assert:
      that:
        - rec.set
        - rec.set.record == test_record
        - rec.set.type == 'A'
        - rec.set.ttl == 600
        - rec.set.value | length == 2
        - rec.set.value | sort == ['1.2.3.7', '1.2.3.8']

  - name: (token) Delete test record
    hosttech_dns_record_set:
      state: absent
      zone_id: '{{ hosttech_zone_id }}'
      record: '{{ rec.set.record }}'
      ttl: '{{ rec.set.ttl }}'
      type: '{{ rec.set.type }}'
      value: '{{ rec.set.value }}'
      on_existing: keep_and_fail
      hosttech_token: '{{ hosttech_token }}'

  always:
  - name: (token) Ensure that test record is not present
    hosttech_dns_record_set:
      state: absent
      zone_name: '{{ test_zone }}'
      record: '{{ test_record }}'
      type: A
      ttl: 600
      hosttech_token: '{{ hosttech_token }}'
