---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Retrieve nameservers for specific domains
  block:
  - name: Query nameservers for www.example.com and example.org
    community.dns.nameserver_info:
      name:
        - www.example.com
        - example.org
    register: result

  - name: Display retrieved data
    ansible.builtin.debug:
      msg: '{{ result }}'

  - name: Display nameservers of www.example.com
    ansible.builtin.debug:
      msg: '{{ result.results[0].nameservers }}'

  - name: Display first nameserver of www.example.com
    ansible.builtin.debug:
      msg: '{{ result.results[0].nameservers[0] }}'

  - name: Validate nameserver results
    assert:
      that:
        - result.results[0].nameservers[0] == 'a.iana-servers.net.'
        - result.results[0].nameservers[1] == 'b.iana-servers.net.'
        - result.results[0].nameservers[0] != 'b.iana-servers.net.'

- name: Retrieve nameservers using custom DNS servers
  block:
  - name: Query nameservers with specific DNS servers
    community.dns.nameserver_info:
      name:
        - www.example.com
        - example.org
      servers:
        - 208.67.222.222
        - 208.67.220.220
    register: result

  - name: Display queried nameserver data
    ansible.builtin.debug:
      msg: '{{ result }}'

  - name: Display nameservers of www.example.com
    ansible.builtin.debug:
      msg: '{{ result.results[0].nameservers }}'

  - name: Display first nameserver of www.example.com
    ansible.builtin.debug:
      msg: '{{ result.results[0].nameservers[0] }}'

  - name: Validate nameserver results
    assert:
      that:
        - result.results[0].nameservers[0] == 'a.iana-servers.net.'
        - result.results[0].nameservers[1] == 'b.iana-servers.net.'
        - result.results[0].nameservers[0] != 'b.iana-servers.net.'

- name: Recursively retrieve nameservers for non-existent subdomains
  block:
  - name: Recursively query nameservers for non-existent domains
    community.dns.nameserver_info:
      name:
        - does.not.exist.www.example.com
        - does.not.exist.example.org
      recursive_lookup: true
    register: result

  - name: Display queried nameserver data
    ansible.builtin.debug:
      msg: '{{ result }}'

  - name: Display nameservers of non-existent subdomain
    ansible.builtin.debug:
      msg: '{{ result.results[0].nameservers }}'

  - name: Display first nameserver of non-existent subdomain
    ansible.builtin.debug:
      msg: '{{ result.results[0].nameservers[0] }}'

  - name: Validate recursive nameserver results
    assert:
      that:
        - result.results[0].nameservers[0] == 'a.iana-servers.net.'
        - result.results[0].nameservers[1] == 'b.iana-servers.net.'
        - result.results[0].nameservers[0] != 'b.iana-servers.net.'

- name: Test failure on non-existent subdomains without recursive lookup
  block:
  - name: Attempt nameserver retrieval for non-existent domains
    community.dns.nameserver_info:
      name:
        - does.not.exist.www.example.com
        - does.not.exist.example.org
      recursive_lookup: false
    register: result
    ignore_errors: true

  - name: Validate non-recursive retrieval failure
    assert:
      that: 
        - result is failed
        - "'The DNS query name does not exist' in result.msg"